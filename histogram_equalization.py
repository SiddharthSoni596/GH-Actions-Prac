# -*- coding: utf-8 -*-
"""Histogram_Equalization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14ZnBfDbJRILsoTJ3A0gvj9n-up9sAS3c
"""

import numpy as np
import matplotlib.pyplot as plt
image = plt.imread("lung.jpg")
# plt.imshow(image,cmap="gray")

#converting image into array
img = np.array(image)
# print("Actual Pixels Count: ",img.shape[0] * img.shape[1])
#Convert 2D lung image or array into 1D
flat = img.flatten()
# print("After flattening the image: ",flat.shape)
hist = plt.hist(flat,bins = 256)

def get_histogram(image,bins):
  histogram = np.zeros(bins)

  for pixel in image:
    histogram[pixel] += 1
  
  return histogram

# hist = get_histogram(flat,256)
hist = hist[0]

cs = hist.cumsum()

plt.plot(cs)
plt.show()

# value - min / max - min
num = (cs - cs.min())*255
den = cs.max() - cs.min()

#normalize cumsum
cs = num / den

cs = cs.astype("uint8")

plt.plot(cs)
plt.show()

#getting value from csum
img_new  = cs[flat]

img_new = np.reshape(img_new,img.shape)

fig = plt.figure(figsize=(12,12))

fig.add_subplot(1,2,1)
plt.imshow(img,cmap="gray")

fig.add_subplot(1,2,2)
plt.imshow(img_new,cmap="gray")

plt.show(block=True)

plt.hist(img_new.flatten(),bins = 256)

